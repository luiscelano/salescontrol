/*Universidad Mariano Galvez de Guatemala
Introducción a Sistemas de Cómputo*/
create database proyecto1_computo;
use proyecto1_computo;
CREATE TABLE TPROVEEDORES(
ID_TPROV INT,
TIPO_PROVEEDOR VARCHAR(20)
);

ALTER TABLE TPROVEEDORES ADD CONSTRAINT TPROVEEDORES_PK PRIMARY KEY(ID_TPROV);

INSERT INTO TPROVEEDORES (ID_TPROV, TIPO_PROVEEDOR)VALUES (1, 'Producto');
INSERT INTO TPROVEEDORES (ID_TPROV, TIPO_PROVEEDOR)VALUES (2, 'Servicio');
INSERT INTO TPROVEEDORES (ID_TPROV, TIPO_PROVEEDOR)VALUES (3, 'Recurso');

SELECT * FROM TPROVEEDORES;

CREATE TABLE PROVEEDORES(
ID_PROVE INT,
NIT INT,
NOM_PROV VARCHAR (20),
DIRECCION VARCHAR (60),
TPROV INT
);
ALTER TABLE PROVEEDORES ADD CONSTRAINT PROVEEDORES_PK PRIMARY KEY (ID_PROVE);
ALTER TABLE PROVEEDORES ADD CONSTRAINT PROVEEDORES_TPROVEEDORES_FK FOREIGN KEY (TPROV) REFERENCES TPROVEEDORES (ID_TPROV);
ALTER TABLE PROVEEDORES ADD TELEFONO VARCHAR(15);
INSERT INTO PROVEEDORES (ID_PROVE, NIT, NOM_PROV, DIRECCION, TPROV, TELEFONO)VALUES (5, 65748392, 'Canon U.S.A., Inc.',
'One Canon Park Melville, NY 11747', 1, '631-330-5000');
/*Mas proveedores agregados --------------------*/
INSERT INTO PROVEEDORES (ID_PROVE, NIT, NOM_PROV, DIRECCION, TPROV, TELEFONO)VALUES (6, 56464877, 'Epson U.S.A., Inc.',
'2350 Stafford Rd, Plainfield, IN 46168, Estados Unidos', 1, '+1 317-406-2600');
INSERT INTO PROVEEDORES (ID_PROVE, NIT, NOM_PROV, DIRECCION, TPROV, TELEFONO)VALUES (7, 44723747, 'Dell EMC, Inc.',
'4225 Naperville Rd # 500, Lisle, IL 60532, Estados Unidos', 1, '+1 630-505-3273');
INSERT INTO PROVEEDORES (ID_PROVE, NIT, NOM_PROV, DIRECCION, TPROV, TELEFONO)VALUES (8, 46454222, 'IC Intracom.',
'550 Commerce Blvd, Oldsmar, FL 34677, Estados Unidos', 1, '+1 813-855-0550');
INSERT INTO PROVEEDORES (ID_PROVE, NIT, NOM_PROV, DIRECCION, TPROV, TELEFONO)VALUES (9, 44443435, 'Razer Inc.',
'9 Pasteur Suite #100, Irvine, CA 92618, Estados Unidos', 1, '+1 949-655-8888');

SELECT * FROM PROVEEDORES;

CREATE TABLE TPRODUCTOS(
ID_TPROD INT,
TIPO_PRODUCTO VARCHAR (20)
);
ALTER TABLE TPRODUCTOS ADD CONSTRAINT TPRODUCTOS_PK PRIMARY KEY (ID_TPROD);

INSERT INTO TPRODUCTOS (ID_TPROD, TIPO_PRODUCTO) VALUES (11, 'CONSUMO');
INSERT INTO TPRODUCTOS (ID_TPROD, TIPO_PRODUCTO) VALUES (12, 'Negocios');
INSERT INTO TPRODUCTOS (ID_TPROD, TIPO_PRODUCTO) VALUES (13, 'Duracion');
INSERT INTO TPRODUCTOS (ID_TPROD, TIPO_PRODUCTO) VALUES (14, 'Tangibilidad');

SELECT * FROM TPRODUCTOS;

CREATE TABLE PRODUCTOS(
ID_PROD INT,
NOM_PROD VARCHAR(20),
PRECIO_UNIDAD DECIMAL (18,2),
FEHCA_INGRESO DATE,
CADUCIDAD_PROD DATE,
NO_EXIST INT,
DESCRIPCION_PROD VARCHAR (90),
TIPO_PROD INT,
ID_PROV INT
);
ALTER TABLE PRODUCTOS ADD CONSTRAINT PRODUCTOS_PK PRIMARY KEY (ID_PROD);
ALTER TABLE PRODUCTOS ADD CONSTRAINT PRODUCTOS_TPRODUCTOS_FK FOREIGN KEY (TIPO_PROD) REFERENCES TPRODUCTOS (ID_TPROD);
ALTER TABLE PRODUCTOS ADD CONSTRAINT PRODUCTOS_PROVEEDORES_FK FOREIGN KEY (ID_PROV) REFERENCES PROVEEDORES (ID_PROVE);

INSERT INTO PRODUCTOS (ID_PROD, NOM_PROD, PRECIO_UNIDAD, FEHCA_INGRESO, CADUCIDAD_PROD, NO_EXIST, DESCRIPCION_PROD, TIPO_PROD, ID_PROV) VALUES (16, 'Impresora Canon 3100', 2500, '18-12-03', '30-04-20', 12, 'Impresora Canon Modelo 3100-HFP-554', 14, 5);
/*Mas productos agregados ----------------*/
INSERT INTO PRODUCTOS (ID_PROD, NOM_PROD, PRECIO_UNIDAD, FEHCA_INGRESO, CADUCIDAD_PROD, NO_EXIST, DESCRIPCION_PROD, TIPO_PROD, ID_PROV) VALUES (17, 'Impresora Epson ip28', 2300, '18-12-04', '30-04-21', 20, 'Modelo IP28', 14, 6);
INSERT INTO PRODUCTOS (ID_PROD, NOM_PROD, PRECIO_UNIDAD, FEHCA_INGRESO, CADUCIDAD_PROD, NO_EXIST, DESCRIPCION_PROD, TIPO_PROD, ID_PROV) VALUES (18, 'Monitor LCD 19" DELL', 750, '18-12-05', '30-04-22', 15, 'Model Ultrasharp', 14, 7);
INSERT INTO PRODUCTOS (ID_PROD, NOM_PROD, PRECIO_UNIDAD, FEHCA_INGRESO, CADUCIDAD_PROD, NO_EXIST, DESCRIPCION_PROD, TIPO_PROD, ID_PROV) VALUES (19, 'Mouse Manhattan', 60, '18-12-06', '30-04-23', 30, '178175', 14, 8);
INSERT INTO PRODUCTOS (ID_PROD, NOM_PROD, PRECIO_UNIDAD, FEHCA_INGRESO, CADUCIDAD_PROD, NO_EXIST, DESCRIPCION_PROD, TIPO_PROD, ID_PROV) VALUES (20, 'Teclado Gaming Razer', 450, '18-12-07', '30-04-24', 7, 'Blackwidow Model', 14, 9);

SELECT * FROM PRODUCTOS;

CREATE TABLE VENDEDORES(
ID_VENDEDOR INT,
NOM_VENDEDOR VARCHAR(20),
TELEFONO INT
); 
ALTER TABLE VENDEDORES ADD CONSTRAINT VENDEDORES_PK PRIMARY KEY (ID_VENDEDOR);

INSERT INTO VENDEDORES (ID_VENDEDOR, NOM_VENDEDOR, TELEFONO) VALUES (3574,'Henry Perez', 45546787); 
INSERT INTO VENDEDORES (ID_VENDEDOR, NOM_VENDEDOR, TELEFONO) VALUES (732,'Isis Mendez ', 56778493); 
INSERT INTO VENDEDORES (ID_VENDEDOR, NOM_VENDEDOR, TELEFONO) VALUES (3434,'Celano', 39897654); 

SELECT * FROM VENDEDORES;

CREATE TABLE CLIENTES(
ID_CLIENTE INT,
NOMBRE VARCHAR (30),
APELLIDO VARCHAR (30),
TELEFONO INT,
EMAIL VARCHAR (40),
DIRECCION VARCHAR (40)
);
ALTER TABLE CLIENTES ADD CONSTRAINT CLIENTES_PK PRIMARY KEY (ID_CLIENTE);

INSERT INTO CLIENTES (ID_CLIENTE, NOMBRE, APELLIDO, TELEFONO, EMAIL, DIRECCION) VALUES (30,'Pablo Andres', 'Lopez Funes', 54647367, 'pandresf@gmail.com', 'Calle 21 2da Av. Zona 2');
INSERT INTO CLIENTES (ID_CLIENTE, NOMBRE, APELLIDO, TELEFONO, EMAIL, DIRECCION) VALUES (20,'Erick Andres', 'Hernandez Serrano', 54647367, 'erick@gmail.com', '18 calle 5-40 zona 1');
INSERT INTO CLIENTES (ID_CLIENTE, NOMBRE, APELLIDO, TELEFONO, EMAIL, DIRECCION) VALUES (21,'Luis Eduardo', 'Alvarado Celano', 32899650, 'luiscelano46@gmail.com', '14 calle 1-10 zona 1');
INSERT INTO CLIENTES (ID_CLIENTE, NOMBRE, APELLIDO, TELEFONO, EMAIL, DIRECCION) VALUES (22,'Edgar Josue', 'Torres Ovando', 65897415, 'erick@gmail.com', 'via 4 ruta 3 zona 4');
INSERT INTO CLIENTES (ID_CLIENTE, NOMBRE, APELLIDO, TELEFONO, EMAIL, DIRECCION) VALUES (23,'Pablo Andres', 'Hernandez Duarte', 99884111, 'erick@gmail.com', 'Edificio RUE 3 zona 4');
SELECT * FROM CLIENTES;

CREATE TABLE VENTAS(
ID_VENTAS INT,
FECHA_VENTA DATE,
TOTAL_VENTAS DECIMAL (18,2),
CANTI_PROD INT, 
VENDEDOR_ID INT,
CLIENTE_ID INT
);
ALTER TABLE VENTAS ADD CONSTRAINT VENTAS_PK PRIMARY KEY (ID_VENTAS);
ALTER TABLE VENTAS ADD CONSTRAINT VENTAS_CLIENTES_FK FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTES (ID_CLIENTE);
ALTER TABLE VENTAS ADD CONSTRAINT VENTAS_VENDEDORES_FK FOREIGN KEY (VENDEDOR_ID) REFERENCES VENDEDORES (ID_VENDEDOR);

/*Nueva venta creada -----------------*/
INSERT INTO VENTAS(ID_VENTAS,FECHA_VENTA,TOTAL_VENTAS,CANTI_PROD,VENDEDOR_ID,CLIENTE_ID) VALUES(1,'31-03-20',1,2,3434,30);
INSERT INTO VENTAS(ID_VENTAS,FECHA_VENTA,TOTAL_VENTAS,CANTI_PROD,VENDEDOR_ID,CLIENTE_ID) VALUES(2,'1-04-20',1,4,732,20);
INSERT INTO VENTAS(ID_VENTAS,FECHA_VENTA,TOTAL_VENTAS,CANTI_PROD,VENDEDOR_ID,CLIENTE_ID) VALUES(3,'1-04-20',1,2,3574,21);
INSERT INTO VENTAS(ID_VENTAS,FECHA_VENTA,TOTAL_VENTAS,CANTI_PROD,VENDEDOR_ID,CLIENTE_ID) VALUES(4,'1-04-20',1,1,3434,22);
INSERT INTO VENTAS(ID_VENTAS,FECHA_VENTA,TOTAL_VENTAS,CANTI_PROD,VENDEDOR_ID,CLIENTE_ID) VALUES(5,'1-04-20',1,2,3574,23);
CREATE TABLE DETALLE_PROD(
COD_VENTA INT,
COD_PROD INT,
CANTIDAD_PROD INT,
PRECIO_TOTAL DECIMAL (20,2)
);
ALTER TABLE DETALLE_PROD ADD CONSTRAINT DETALLE_PROD_VENTAS_FK FOREIGN KEY (COD_VENTA) REFERENCES VENTAS (ID_VENTAS);
ALTER TABLE DETALLE_PROD ADD CONSTRAINT DETALLE_PROD_PRODUCTOS_FK FOREIGN KEY (COD_PROD) REFERENCES PRODUCTOS (ID_PROD);
INSERT INTO DETALLE_PROD(COD_VENTA,COD_PROD,CANTIDAD_PROD,PRECIO_TOTAL) VALUES(1,17,2,4600);
INSERT INTO DETALLE_PROD(COD_VENTA,COD_PROD,CANTIDAD_PROD,PRECIO_TOTAL) VALUES(1,19,4,240);
INSERT INTO DETALLE_PROD(COD_VENTA,COD_PROD,CANTIDAD_PROD,PRECIO_TOTAL) VALUES(2,17,1,4600);
INSERT INTO DETALLE_PROD(COD_VENTA,COD_PROD,CANTIDAD_PROD,PRECIO_TOTAL) VALUES(2,19,3,240);
INSERT INTO DETALLE_PROD(COD_VENTA,COD_PROD,CANTIDAD_PROD,PRECIO_TOTAL) VALUES(3,16,1,2500);
INSERT INTO DETALLE_PROD(COD_VENTA,COD_PROD,CANTIDAD_PROD,PRECIO_TOTAL) VALUES(4,18,4,3000);
INSERT INTO DETALLE_PROD(COD_VENTA,COD_PROD,CANTIDAD_PROD,PRECIO_TOTAL) VALUES(5,20,5,2250);
SELECT * FROM PRODUCTOS;
SELECT * FROM VENTAS;
SELECT * FROM DETALLE_PROD;
/*Trigger de actualizacion de total de venta y agregar cantidad producto*/
create trigger on_new_product after insert on DETALLE_PROD for each row 
update VENTAS set TOTAL_VENTAS= TOTAL_VENTAS+NEW.PRECIO_TOTAL where ID_VENTAS=NEW.COD_VENTA;
create trigger update_venta after insert on DETALLE_PROD for each row 
update VENTAS set CANTI_PROD= CANTI_PROD+NEW.CANTIDAD_PROD where ID_VENTAS=NEW.COD_VENTA;
/*trigger de actualizacion de stock*/
create trigger update_stock after insert on DETALLE_PROD for each row 
update PRODUCTOS set NO_EXIST=NO_EXIST-NEW.CANTIDAD_PROD WHERE NEW.COD_PROD=ID_PROD;

SELECT ID_VENDEDOR, NOM_VENDEDOR, TOTAL_ VENTAS
FROM VENDEDORES INNER JOIN VENDEDORES ON VENTAS.VENDEDOR_ID=VENDEDORES.VENDEDOR_ID;

SELECT ID_CLIENTE, NOMBRE, APELLIDO, TOTAL_VENTAS
FROM CLIENTES INNER JOIN CLIENTES ON VENTAS.CLIENTE_ID=CLIENTES.CLIENTE_ID;

SELECT NO_EXIST
FROM PRODUCTS WHERE NO_EXIST >= 0;

SELECT NO_EXIST 
FROM PRODUCTS WHERE NO_EXIST <= 1;

SELECT NOM_PROD, TELEFONO, NOM_PROV 
FROM PRODUCTOS INNER JOIN ON PROVEEDORES.ID_PROVE=PRODUCTOS.ID_PROV;

SELECT ID_VENTAS, CLIENTE_ID, TELEFONO
FROM VENTAS INNER JOIN ON CLIENTES.ID_CLIENTE=VENTAS.CLIENTE_ID;

SELECT NOM_ PROV, TIPO_PROVEEDOR 
FROM PROVEEDORES INNER JOIN ON TPROVEEDORES.ID_TPROV=PROVEEDORES.ID_PROVE